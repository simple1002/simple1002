# DivineEngine Quantumult 配置示例
#
# 以 ";" 或 "#" 或 "//" 开头的行为注释行。
#
# 最新完整的示例需查看 Quantumult X 里「配置文件」中的「示例」
#

[general]
# 建议在「其他设置」里「GeoLite2」的「来源」填写使用「 https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb 」并开启「自动更新」

;profile_img_url=http://www.example.com/example.png
profile_img_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/img/dragonball/1.PNG

# resource_parser_url 示例可以在以下网站找到 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js
resource_parser_url=https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js

;geo_location_checker=http://www.example.com/json/, https://www.example.com/script.js

# Quantumult 使用 HEAD 方法将 HTTP 请求发送到服务器检查 url 来测试代理的状态，结果应该是两个延迟，第一个是 TCP 与代理服务器的握手，第二个是 Quantumult 成功地从服务器检查 url 接收 HTTP 响应的总时间。闪电图标表示 TCP Fast Open 成功。如果 [server_local] 或 [server_remote] 中的服务器有自己的 server_check_url，则会用自己的 server_check_url 代替 [general] 中的 server_check_url。
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试(测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间)，来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
server_check_url=http://cp.cloudflare.com/generate_204

# DNS 排除列表
# dns_exclusion_list 包含了禁用占位符 IP (240.*) 的域，不在 dns_exclusion_list 中的域都启用了占位符 IP，并打开了 resolve-on-remote 设置。
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me

# Quantumult 将不会处理到 excluded_routes 的流量。修改后最好重新启动您的设备。
;excluded_routes=192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
# Hearthstone: 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32
excluded_routes=239.255.255.250/32

# 在网络环境切换时出发运行模式变更
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# 示例意思：[蜂窝数据],[Wi-Fi],[SSID]
# 下列示例的意思为：在蜂窝数据使用规则分流(第一个 filter)，在 Wi-Fi 使用规则分流(第二个 filter)，在 SSID 为 LINK_22E171 的 Wi-Fi 使用全部代理，，在 SSID 为 LINK_22E172 的 Wi-Fi 使用全部直连
# Rewrite 及 Task 模块始终生效
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct
#自己解释的规则：第一个filter为4g模式开启规则分流，第二个filter为其他wifi下开启规则分流，第三个wifi1修改成你路由器翻墙的wifi名开启直连模式，第四个wifi2为你公司或者其他有路由器翻墙的WiFi名走直连）
#默认关闭根据wifi切换模式，如需开启，删除下方的“#”即可！
running_mode_trigger=filter, filter, wifi1:all_direct, wifi2: all_direct

# 在特定 SSID 网络时(除了 Task 模块)暂停 Quantumult X
;ssid_suspended_list=LINK_22E174, LINK_22E175

# 参数 udp_whitelist 从 IP 层控制 UDP 数据是否需要舍弃；如舍弃，则该 UDP 请求不会进入规则模块以及策略模块，TCP/UDP 请求记录中也不会有相应的条目，但仍可在日志中查询到相关信息（日志等级 debug）。
# 该参数控制的是流入 Quantumult X Tunnel 的请求，并非 Quantumult X Tunnel 发出的请求，即不会作用于节点所使用的 UDP 目标端口。
;udp_whitelist=53, 123, 1900, 80-443
udp_whitelist=1-442, 444-65535

# 说明：参数 fallback_udp_policy 的值仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）。默认为 reject。
# 当 UDP 请求经过规则模块以及策略模块后所命中的节点为 Quantumult X 所不支持 UDP 转发的节点（如：VMess、trojan），或支持 UDP 转发但未注明 udp-relay=true 的（例如：SS/SSR 且与服务器是否真实开启 UDP 转发无关），则 fallback_udp_policy 会被使用。
# 注意：如果您需要调整该参数的值为 direct，请务必清楚了解同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
# 如果没有节点支持 UDP 转发，可取消下条注释（去除 ;）
;fallback_udp_policy=direct
;icmp_auto_reply=true

# geo_location_checker
# 用于节点页面的信息展示，可完整自定义
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://github.com/KOP-XIAO/QuantumultX/raw/master/Scripts/IP_API.js
[dns]
# 查询结果只用于评估过滤器或通过直接策略连接，当通过服务器连接时，查询结果不会被使用，Quantumult 永远不会知道相关域名的目标 IP。
# 如果您想让某个域名(例如：example.com)为 127.0.0.0.1，只需在「filter_local」部分添加「host, example.com, reject」即可。拒绝操作将返回 127.0.0.0.1 的 DNS 响应。

# 禁用系统 DNS
# 为了提高性能，会使用从当前网络(系统)中获取的 DNS 服务器(您可以使用「no-system」禁用此功能，但至少要增加一个自定义的 DNS 服务器。
;no-system

# 禁用 IPv6
# 当设置「no-ipv6」时，Quanumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败。
no-ipv6

# 自定义 DNS
# > OneDNS
;server=117.50.10.10
# > DNSPod Public DNS
server=119.29.29.29
# > Alibaba Public DNS
;server=223.5.5.5

# 在特定的网络环境下忽略自定义 DNS 可在后方加上「excluded_ssids」相关字段。
# 注意：如配置了 no-system，则请务必确保在忽略了部分自定义 DNS 的配置下至少有一个可用的自定义 DNS 配置。
# server=114.114.114.114, excluded_ssids=SSID1, SSID2

# DNS over HTTPS
# 当 DoH 服务器被设置时，所有其他普通的（没有与之相关的特定域）服务器将被忽略。
# 当设置了多个 DoH 服务器时，只有第一个会被使用。
# 当使用的 DoH 服务器不是基于 HTTP/2 时，DoH 将被暂时禁用，并使用常规服务器，直到下次启动 VPN 连接。
# 不建议在与防火墙相关的网络环境中使用，不确定 DoH 服务器是否总能被到达。
# 如果 DoH 服务器在您的国家或地区不是流行的 DNS 服务器，则不推荐使用，它可能会丢失 ISP DNS 服务器返回的 CDN 优化结果。
# 如果 DoH 服务器是一个反广告相关的服务器，则不推荐使用（Quantumult X 过滤模块对于被拒绝的域具有更好的性能，它可以避免客户端无休止的请求）。
;doh-server=https://dns.alidns.com/dns-query
;doh-server=https://223.6.6.6/dns-query

# 本地 DNS 映射

# > Firebase Cloud Messaging
address=/mtalk.google.com/108.177.125.188
# > Google Dl
server=/dl.google.com/119.29.29.29
server=/dl.l.google.com/119.29.29.29
server=/update.googleapis.com/119.29.29.29

# > PlayStation
server=/*.dl.playstation.net/119.29.29.29

# > Router Admin Panel
server=/amplifi.lan/system
server=/router.synology.com/system
server=/sila.razer.com/system
server=/router.asus.com/system
server=/routerlogin.net/system
server=/orbilogin.com/system
server=/www.LinksysSmartWiFi.com/system
server=/LinksysSmartWiFi.com/system
server=/myrouter.local/system
server=/www.miwifi.com/system
server=/miwifi.com/system
server=/mediarouter.home/system
server=/tplogin.cn/system
server=/tplinklogin.net/system
server=/melogin.cn/system
server=/falogin.cn/system

;server=8.8.4.4:53
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
# DoH服务器(DNS over HTTPS)以加密的HTTPS协议进行DNS解析请求，避免原始DNS协议中用户的DNS解析请求被窃听或者修改的问题（例如中间人攻击）来达到保护用户隐私的目的
# 设置DoH服务器后，所有其他常规DNS服务器设置将被忽略；当设置了多个DoH服务器时，只会使用第一个；当使用的 DoH服务器不是基于HTTP/2时，DoH将被暂时禁用。
# 阿里 DoH
doh-server=https://dns.alidns.com/dns-query
# 同时使用多个DoH服务器(Tf功能
# DNS.SB,阿里,红鱼,IIJ
# doh-server=https://doh.dns.sb/dns-query, https://dns.alidns.com/dns-query, https://rubyfish.cn/dns-query, https://public.dns.iij.jp/dns-query
# 常规DNS服务器
# 腾讯云DNSPod DNS
server=119.29.29.29
server=119.28.28.28
# 阿里 AliDNS
server=223.5.5.5
# 114 DNS
server=114.114.114.114
# 制定域名解析 dns
server=/*.taobao.com/223.5.5.5
server=/*.tmall.com/223.5.5.5
server=/*.alipay.com/223.5.5.5
server=/*.aliyun.com/223.5.5.5
server=/*.jd.com/119.28.28.28
server=/*.qq.com/119.28.28.28
server=/*.tencent.com/119.28.28.28
server=/*.weixin.com/119.28.28.28
server=/*.bilibili.com/119.29.29.29
server=/*.netease.com/119.29.29.29
server=/*testflight.apple.com/23.76.66.98

[policy]
static=🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港, 🇯🇵 日本, 🇸🇬 新加坡, 🇺🇸 美国, proxy, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spark.png
# 默认设置10分钟测速一次，当前使用节点延迟和最新测速延迟最低的节点相差100ms以上则切换为最新的最低延迟节点，否则继续延用节点
url-latency-benchmark=♻️ 自动选择, server-tag-regex=.*, check-interval=600, tolerance=100, alive-checking=false, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Proxy.png
url-latency-benchmark=🇭🇰 香港, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$, check-interval=600, tolerance=50, alive-checking=false, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/HK.png
url-latency-benchmark=🇨🇳 台湾, server-tag-regex=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$, check-interval=600, tolerance=50, alive-checking=false, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TW.png
url-latency-benchmark=🇯🇵 日本, server-tag-regex=(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$, check-interval=600, tolerance=100, alive-checking=false, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/JP.png
url-latency-benchmark=🇸🇬 新加坡, server-tag-regex=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$, check-interval=600, tolerance=100, alive-checking=false, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SG.png
url-latency-benchmark=🇺🇸 美国, server-tag-regex=(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$, check-interval=600, tolerance=100, alive-checking=false, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/US.png
static=全球加速, direct, proxy, reject, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
static=网易云音乐, 🚀 节点选择, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netease_Music_Unlock.png
static=Disney+, direct, proxy, reject, 🚀 节点选择, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Disney+.png
static=Netflix, direct, proxy, reject, 🚀 节点选择, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix_Letter.png
static=YouTube, direct, proxy, reject, 🚀 节点选择, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube_Letter.png
static=Spotify, direct, proxy, reject, 🚀 节点选择, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Spotify.png
static=Telegram, direct, proxy, reject, 🚀 节点选择, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/GMedia.png
#
# 需要策略图标的在策略后加上：img-url=http://example.com/icon.png
#

# 类型：静态(static)
# 指向您手动选择的候选服务器。
;static=policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png

# 类型：可用(available)
# 指向候选服务器的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发 url 延迟测试。
# 如果当时没有网络请求接受策略，这意味着策略处于空闲状态，即使服务器关闭，测试也不会启动。那时，您可以通过手动启动测试来更新服务器状态，但是这没有任何意义)。
;available=policy-name-2, Sample-A, Sample-B, Sample-C

# 类型：负载均衡(round-robin)
# 指向在候选服务器中指向下一个服务器以进行下一次连接。
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C

# 类型：延迟测试(url-latency-benchmark)
# 策略指向具有最佳 URL 延迟(公差，单位毫秒)结果的服务器。
# 当用户在 Quantumult X 中手动启动 URL 测试时，策略结果也会被更新。
# 该类型的策略有一个名为 check-interval(秒) 的参数，如果此策略已经被任何请求激活，则将考虑该间隔。
;url-latency-benchmark=policy-name-8, resource-tag-regex=^sample, server-tag-regex=^example, check-interval=600, tolerance=0

# SSID
# 策略根据网络环境的不同指向服务器。
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C

# resource-tag-regex 及 server-tag-regex 仅适用于 static、available 和 round-robin 类型的策略。
;static=policy-name-5, resource-tag-regex=^sample, server-tag-regex=^example, img-url=http://example.com/icon.png
;available=policy-name-6, resource-tag-regex=^sample, server-tag-regex=^example
;round-robin=policy-name-7, resource-tag-regex=^sample, server-tag-regex=^example

static=Final, proxy, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png
static=Streaming, proxy, ♻️ 自动选择, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/XTunnel.png
static=StreamingSE, direct, proxy, ♻️ 自动选择, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Blackhole.png

[server_remote]
https://xiaobaigou.cc/link/z2QT2gmA9mQEgsTg?list=quantumultx, tag=☁️速云, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/GLaDOS.png, update-interval=172800, opt-parser=false, enabled=true

# > 为避免网易云解锁节点滥用，有需求的请去墨鱼手记公众号回复【网易云】获取
#checkurl=http://interface3.music.163.com
# > 魔法仅供临时使用[一]
https://proxies.bihai.cf/vmess/sub?filter=r, tag=TemporaryUse-墨鱼, update-interval=172800, opt-parser=true, enabled=true
# > 魔法仅供临时使用[二]
https://openit.ml/Quanx.conf, tag=TemporaryUse_墨鱼, update-interval=172800, opt-parser=true, enabled=true
#
# 参数「tag」和「enabled」是可选的。
# 各种远程资源的默认同步时间间隔是 172800 秒。
# 你可以设置 update-interval=172800 来自定义你的自动同步时间间隔(秒)，负数表示禁用自动同步。
#

[filter_remote]
#
# 参数「tag」、「force-policy」和「enabled」是可选的。
# 当有强制策略时，远程资源的过滤器中的策略将被忽略，并使用强制策略。
#

#Tiktok海外，如需改区，本地在 [rewrite_local] 下方添加 (?<=_region=)CN(?=&) url 307 JP 将JP更改成你想改的区域。(?<=_region=)CN(?=&) url 307 US，全部地区代码为
#美国：US、英国：GB、法国：FR、德国：DE、日本：JP、韩国：KR、朝鲜：KP、台湾：TW、香港：HK、澳门：MO、泰国：TH、越南：VN、缅甸：MM、印度尼西亚：ID、菲律宾：PH、新加坡：SG、俄罗斯：RU、加拿大：CA、马来西亚：MY、瑞典：SE、古巴：CU、芬兰：FI、丹麦：DK、巴西：BR、智利：CL、捷克：CS、苏丹：SD、　　冰岛：IS、瑞士：CH、荷兰：NL、挪威：NO、秘鲁：PE、中非：CF、南非：ZA、刚果：CG、沙特：SA、阿联酋：AE、意大利：IT、爱尔兰：IE、新西兰：NZ、乌克兰：UA、摩洛哥：MA、阿根廷：AR、土耳其：TR、尼泊尔：NP、巴拿马：PA、西班牙：ES、墨西哥：MX、哥伦比亚：CO、澳大利亚：AU、委内瑞拉：VE、毛里求斯：MU、马达加斯加：MD
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/TikTok.list, tag=Tiktok海外解锁, force-policy=全球加速, update-interval=86400, opt-parser=true, enabled=true
#网易云解锁灰色歌曲
https://raw.githubusercontent.com/ddgksf2013/Cuttlefish/master/Filter/NeteaseMusic.list, tag=解锁网易云音乐, force-policy=网易云音乐, update-interval=-1, opt-parser=false, enabled=true
# Unbreak 后续规则修正
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list, tag=🔂Unbreak, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true
# Advertising 广告
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Advertising.list, tag=🛡Advertising, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
# Advertising 广告Plus
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/AdvertisingPlus.list#type=domain-set, tag=🛡Advertising+, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
# Privacy 隐私
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Privacy.list, tag=🛡️Privacy, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
# Hijacking 运营商劫持或恶意网站
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Hijacking.list, tag=🛡️Hijacking, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
# Disney+
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/DisneyPlus.list, tag=🎞Disney+, force-policy=Disney+, update-interval=172800, opt-parser=true, enabled=true
# Netflix
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/Netflix.list, tag=🎞Netflix, force-policy=Netflix, update-interval=172800, opt-parser=true, enabled=true
# YouTube
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/YouTube.list, tag=🎞YouTube, force-policy=YouTube, update-interval=172800, opt-parser=true, enabled=true
# Spotify
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Music/Spotify.list, tag=💽Spotify, force-policy=Spotify, update-interval=172800, opt-parser=true, enabled=true
# Streaming 国际流媒体服务
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Streaming.list, tag=🎞Streaming, force-policy=Streaming, update-interval=172800, opt-parser=true, enabled=true
# StreamingSE 中国流媒体服务(面向海外版本)
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/StreamingSE.list, tag=🎞StreamingSE, force-policy=StreamingSE, update-interval=172800, opt-parser=true, enabled=true
# Telegram
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Telegram/Telegram.list, tag=📨Telegram, force-policy=Telegram, update-interval=172800, opt-parser=true, enabled=true
# Global 全球加速
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list, tag=🇺🇳Global, force-policy=proxy, update-interval=172800, opt-parser=true, enabled=true
# China 国内网站
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/China.list, tag=🇨🇳国内网站-直连, force-policy=direct, update-interval=86400, opt-parser=false, enabled=true
# ChinaIP 中国直连
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/ChinaIP.list, tag=🇨🇳中国IP-直连, update-interval=86400, opt-parser=false , enabled=true

[rewrite_remote]
#
# 参数「tag」和「enabled」是可选的。

#>>>>>>>>>>>解锁会员
#墨鱼专属VIP
https://raw.githubusercontent.com/ddgksf2013/Cuttlefish/master/Rewrite/UnlockApp.conf, tag=墨鱼专属VIP[请自行添加hostname]
#Spotify破解VIP
https://github.com/ddgksf2013/Cuttlefish/raw/master/Rewrite/UnlockVip/Spotify.conf, tag=Spotify破解VIP
#解锁会员权限
https://subweb.s3.fr-par.scw.cloud/Module/embyUnlocked.conf, tag=emby解锁会员权限
#人人视频vip
https://github.com/ddgksf2013/Cuttlefish/raw/master/Rewrite/UnlockVip/Rrtv.conf, tag=人人视频VIP
#B站去广告+1080P高码率
https://github.com/ddgksf2013/Cuttlefish/raw/master/Rewrite/AdBlock/Bilibili.conf, tag=B站去广告+1080P高码率
#酷我音乐vip
https://github.com/ddgksf2013/Cuttlefish/raw/master/Rewrite/UnlockVip/Kuwo.conf, tag=酷我音乐VIP

#>>>>>>>>>>>软件增强
#获取Cookie
https://raw.githubusercontent.com/w37fhy/QuantumultX/master/QuantumultX_Cookie.conf, tag=获取Cookie, update-interval=86400, opt-parser=false, enabled=true
#Google自动翻页 
https://github.com/ddgksf2013/Cuttlefish/raw/master/Rewrite/Function/EndlessGoogle.conf, tag=Google自动翻页
#百度网盘倍速
https://raw.githubusercontent.com/ddgksf2013/Cuttlefish/master/Rewrite/UnlockVip/BaiduCloud.conf, tag=百度网盘倍速
#微信解锁被屏蔽的URL
https://raw.githubusercontent.com/zZPiglet/Task/master/UnblockURLinWeChat.conf, tag=微信解锁被屏蔽的URL
#bilibili换区脚本
https://github.com/ddgksf2013/Cuttlefish/raw/master/Rewrite/Function/BilibiliAutoRegion.conf, tag=Bilibili换区脚本
#比价脚本
https://raw.githubusercontent.com/Orz-3/QuantumultX/master/JD_TB_price.conf, tag=比价脚本
#Tiktok解锁
https://raw.githubusercontent.com/Orz-3/QuantumultX/master/TikTok.conf, tag=Tiktok解锁
#Netflix评分
https://raw.githubusercontent.com/Orz-3/QuantumultX/master/Netflix_ratings.conf, tag=Netflix评分
#Siri与搜索
https://github.com/VirgilClyne/iRingo/raw/main/qxrewrite/Siri.qxrewrite, tag=Siri与搜索2.0
#Youtube字幕翻译
https://raw.githubusercontent.com/id77/QuantumultX/master/rewrite/Youtube_CC.conf#out=Hant, tag=Youtube字幕翻译

#>>>>>>>>>>>应用去广告
# Block Advertising
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=🛡Block Advertising, update-interval=172800, enabled=true
# Block YouTube Ads
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/YouTubeAds.conf, tag=🛡Block YouTube Ads, update-interval=172800, opt-parser=false, enabled=true
# Block Aweme Ads
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/AwemeAds.conf, tag=🛡Block Aweme Ads(<= 16.2.0), update-interval=172800, opt-parser=false, enabled=true
#应用去开屏广告
https://raw.githubusercontent.com/ddgksf2013/Cuttlefish/master/Rewrite/AdBlock/StartUp.conf, tag=应用去开屏广告
#知乎去广告及体验增强
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/zhihu/zhihu_plus.qxrewrite, tag=知乎去广告及体验增强
#什么值得买去广告
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/smzdm/smzdm_remove_ads.qxrewrite, tag=什么值得买去广告
#百度贴吧超级去广告
https://github.com/app2smile/rules/raw/master/module/tieba-qx.conf, tag=百度贴吧超级去广告
#微信小程序去广告
https://raw.githubusercontent.com/ddgksf2013/Cuttlefish/master/Applet/QuanX.conf, tag=微信小程序去广告
#Youtube去广告
https://github.com/ddgksf2013/Cuttlefish/raw/master/Rewrite/AdBlock/YoutubeAds.conf, tag=Youtube去广告
#微博去广告
https://github.com/ddgksf2013/Cuttlefish/raw/master/Rewrite/AdBlock/Weibo.conf, tag=微博去广告
#>>>>>>>>>>>通用去广告
# Block Advertising+
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/AdvertisingPlus.conf, tag=🛡Block Advertising+, update-interval=172800, enabled=true
#去广告重写
https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/Rewrite_lhie1.conf, tag=去广告重写
#神机重定向
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=神机重定向

#>>>>>>>>>>>网页优化
#影视网站去广告
https://github.com/ddgksf2013/Cuttlefish/raw/master/Html/WebAdBlock.conf, tag=影视网站去广告
#超级搜索
https://raw.githubusercontent.com/ddgksf2013/Cuttlefish/master/Rewrite/Function/Q-Search.conf, tag=Safari超级搜索
# > http_backend如果有问题，可以添加下面重写内容
;https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=BoxJS商店版@chavyleung

[server_local]
#
# 只有 obfs=http, obfs=ws, obfs=ws, obfs=wss 可以有可选的「obfs-uri」字段。
# wss 中的 obfs-host 参数将用于 TLS 握手和 HTTP 头主机字段，如果没有为 wss 设置 obfs-host，则将使用服务器地址。
# 目前不支持 VMess 和 Trojan 的 UDP relay。
# 当使用 obfs=ws 和 obfs=wss 时，服务器端可以通过带有 mux=0 的 v2ray-plugin 或 v2ray-core 进行部署。
# obfs plugin tls1.2 ticket auth 比 tls1.2 ticket fastauth 和 obfs tls 多一个 RTT，你最好使用 tls1.2 ticket fastauth。
# chacha20-ietf-poly1305 和 chacha20-poly1305 在 VMess 配置中具有相同的效果。
#
# 可选字段 tls13 仅用于：shadowsocks obfs=wss / vmess obfs=over-tls and obfs=wss / http over-tls=true / trojan over-tls=true
# [server_local] 完整示例请查看「示例」
#解锁网易云音乐节点，下面这个节点无效，需自行去找。
#http=106.52.127.72:19951, fast-open=false, udp-relay=false, tag= 解锁节点一

[filter_local]
# Local Area Network 局域网
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct

final, Final

# > 知乎AD屏蔽,以下规则请放置在filter_local最顶部
DOMAIN,118.89.204.198,REJECT
DOMAIN-KEYWORD,118.89.204.198,REJECT
IP-CIDR,118.89.204.198/32,REJECT
DOMAIN,appcloud2.in.zhihu.com,REJECT
HOST,mqtt.zhihu.com,reject
HOST,sugar.zhihu.com,reject
USER-AGENT,AVOS*,REJECT

# > 贴吧AD处理
IP-CIDR,180.76.76.200/32,REJECT
HOST,im.tieba.baidu.com,REJECT

# > Siri搜索建议
host,lookup-api.apple.com.edgekey.net,proxy
host,e16991.b.akamaiedge.net,proxy

# > local
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 224.0.0.0/24, direct
ip-cidr, 182.254.116.0/24, direct
geoip, cn, direct
final, proxy

[rewrite_local]
# [rewrite_local] 完整示例请查看「示例」

# > TF国区下载修正
^https?:\/\/testflight\.apple\.com\/v2\/accounts\/.*\/apps\/\d*/builds/\d*/install url request-body storefrontId" : ".*" request-body storefrontId" : "143441-1,29"
# > 替换支付宝内淘票票评分为豆瓣评分
^https:\/\/guide-acs\.m\.taobao\.com\/gw\/mtop\.film\.mtopshowapi\.getextendshowbyid url script-response-body https://raw.githubusercontent.com/Peng-YM/QuanX/master/Rewrites/TaoPiaoPiao/taopiaopiao.js
# > 豆瓣添加便捷播放按钮&展示在映流媒体平台
^https?:\/\/m\.douban\.com\/movie\/subject\/.+ url script-response-body https://github.com/Neurogram-R/Quantumult-X/raw/main/Douban.js

[task_local]
#
# $task.fetch() 组成一个 HTTP 请求并处理响应，只支持 text body。如果您想要 serial requests 而不是 current requests，可以将 $task.fetch() 嵌入到另一个 $task.fetch() 的完成处理程序中。
#
# 脚本应保存在本地「我的 iPhone - Quantumult X - Scripts」或「iCloud Drive - Quantumult X - Scripts」中。示例：https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
#
# 默认的 HTTP 请求超时是 10 秒。
#
# 支持 5 或 6 个 cron 字段，不包括命令字段。
#

# [task_local] 完整示例请查看「示例」
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=流媒体服务查询, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Touhou.png, enabled=true

# 网易云音乐解锁节点查询
event-interaction https://raw.githubusercontent.com/I-am-R-E/QuantumultX/main/TaskLocal/NeteaseMusicUnlockCheck.js, tag=网易音乐查询, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netease_Music_Unlock.png, enabled=true

# 疫情动态（默认每天8～22点、每3小时播报一次）

[http_backend]
#
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 输入变量为：$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body。
# 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") 这样的返回响应。
# 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法。
# 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问。服务器默认监听端口为 9999，您可以在UI中进行更改。
#
# [http_backend] 完整示例请查看「示例」

[mitm]
passphrase = E47062EF
p12 = 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
#
# 只有「hostname」中的 TLS SNI 或目标地址将被 MitM 处理。
#
# 默认情况下，当为 HTTPS 请求启用 MitM 时，Quantumult X 会从原站点获取证书（证书会被缓存），保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的（也是比较兼容的）MitM 证书创建方式。
#
# 偶尔有些用户喜欢调试 HTTPS 请求，其域名不存在，所以原证书根本不存在。当参数 simple_cert_hostname 出现的时候。其 TLS SNI 名称在 simple_cert_hostname(及 hostname) 中的 HTTPS 请求将使用纯本地生成的 MitM 证书。
#
# 注意！！！您应该始终保护您的 CA 密码和 p12 的私密性。
#
;passphrase =
;p12 =
skip_validating_cert = true
;force_sni_domain_name = false
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
;hostname = *.googlevideo.com